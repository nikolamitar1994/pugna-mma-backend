services:
  # Main application
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - API_VERSION=v1
      - DATABASE_URL=postgresql://mma_user:mma_password@postgres:5432/mma_database
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=mma_database
      - DATABASE_USER=mma_user
      - DATABASE_PASSWORD=mma_password
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-32-chars-minimum
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production-32-chars
      - JWT_REFRESH_EXPIRES_IN=7d
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
    networks:
      - mma-network

  # PostgreSQL database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mma_database
      POSTGRES_USER: mma_user
      POSTGRES_PASSWORD: mma_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mma_user -d mma_database"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mma-network

  # Redis cache
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - mma-network

  # Development tools (optional)
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - mma-network

  # Redis Commander (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    networks:
      - mma-network

volumes:
  postgres_data:
  redis_data:

networks:
  mma-network:
    driver: bridge