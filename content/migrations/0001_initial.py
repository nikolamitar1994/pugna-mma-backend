# Generated by Django 5.0.1 on 2025-07-29 14:11

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0003_enhanced_fight_statistics'),
        ('fighters', '0009_fighterranking_fighterstatistics_rankinghistory_and_more'),
        ('organizations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, help_text='Brief description of this category')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order for display (0 = first)')),
                ('is_active', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title (leave blank to use name)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO meta description', max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category for hierarchical organization', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='content.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'content_categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=60, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of this tag')),
                ('color', models.CharField(choices=[('#007bff', 'Blue'), ('#28a745', 'Green'), ('#dc3545', 'Red'), ('#ffc107', 'Yellow'), ('#6f42c1', 'Purple'), ('#fd7e14', 'Orange'), ('#20c997', 'Teal'), ('#6c757d', 'Gray')], default='#007bff', help_text='Color for UI display', max_length=7)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of articles using this tag')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'content_tags',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='content_tag_slug_760f9a_idx'), models.Index(fields=['-usage_count'], name='content_tag_usage_c_7dff27_idx')],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Article headline', max_length=200)),
                ('slug', models.SlugField(blank=True, help_text='URL slug (auto-generated)', max_length=220, unique=True)),
                ('excerpt', models.TextField(blank=True, help_text='Brief summary for listings and SEO (auto-generated if blank)', max_length=500)),
                ('content', models.TextField(help_text='Main article content (supports HTML)')),
                ('article_type', models.CharField(choices=[('news', 'News Article'), ('analysis', 'Analysis/Opinion'), ('interview', 'Interview'), ('preview', 'Event Preview'), ('recap', 'Event Recap'), ('profile', 'Fighter Profile'), ('ranking', 'Ranking Analysis'), ('technical', 'Technical Analysis')], default='news', help_text='Type of content for better organization', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Under Review'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('featured_image', models.ImageField(blank=True, help_text='Main article image (recommended: 1200x630px)', upload_to='content/images/%Y/%m/')),
                ('featured_image_alt', models.CharField(blank=True, help_text='Alt text for featured image (accessibility)', max_length=200)),
                ('featured_image_caption', models.CharField(blank=True, help_text='Image caption or credit', max_length=300)),
                ('meta_title', models.CharField(blank=True, help_text='SEO title (leave blank to use article title)', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='SEO meta description (leave blank to use excerpt)', max_length=160)),
                ('is_featured', models.BooleanField(default=False, help_text='Feature on homepage and category pages')),
                ('is_breaking', models.BooleanField(default=False, help_text='Mark as breaking news')),
                ('allow_comments', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of times this article has been viewed')),
                ('reading_time', models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes (auto-calculated)')),
                ('published_at', models.DateTimeField(blank=True, help_text='When this article was/will be published', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(help_text='Article author', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to=settings.AUTH_USER_MODEL)),
                ('editor', models.ForeignKey(blank=True, help_text='Reviewing editor', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_articles', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(help_text='Primary category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='content.category')),
                ('tags', models.ManyToManyField(blank=True, related_name='articles', to='content.tag')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'db_table': 'content_articles',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relationship_type', models.CharField(choices=[('preview', 'Event Preview'), ('recap', 'Event Recap'), ('coverage', 'Live Coverage'), ('analysis', 'Event Analysis'), ('mentions', 'Event Mentioned')], default='mentions', help_text='How this event relates to the article', max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_relationships', to='content.article')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_relationships', to='events.event')),
            ],
            options={
                'verbose_name': 'Article Event Relationship',
                'verbose_name_plural': 'Article Event Relationships',
                'db_table': 'content_article_events',
                'ordering': ['display_order', 'created_at'],
                'indexes': [models.Index(fields=['article', 'relationship_type'], name='content_art_article_13d9cf_idx'), models.Index(fields=['event', 'relationship_type'], name='content_art_event_i_329029_idx')],
                'unique_together': {('article', 'event')},
            },
        ),
        migrations.CreateModel(
            name='ArticleFighter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relationship_type', models.CharField(choices=[('about', 'Article About Fighter'), ('mentions', 'Fighter Mentioned'), ('features', 'Fighter Featured'), ('interview', 'Fighter Interview'), ('analysis', 'Fighter Analysis')], default='mentions', help_text='How this fighter relates to the article', max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fighter_relationships', to='content.article')),
                ('fighter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_relationships', to='fighters.fighter')),
            ],
            options={
                'verbose_name': 'Article Fighter Relationship',
                'verbose_name_plural': 'Article Fighter Relationships',
                'db_table': 'content_article_fighters',
                'ordering': ['display_order', 'created_at'],
                'indexes': [models.Index(fields=['article', 'relationship_type'], name='content_art_article_2940b1_idx'), models.Index(fields=['fighter', 'relationship_type'], name='content_art_fighter_5915ee_idx')],
                'unique_together': {('article', 'fighter')},
            },
        ),
        migrations.CreateModel(
            name='ArticleOrganization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relationship_type', models.CharField(choices=[('news', 'Organization News'), ('announcement', 'Official Announcement'), ('analysis', 'Organization Analysis'), ('mentions', 'Organization Mentioned'), ('policy', 'Policy/Rules Update')], default='mentions', help_text='How this organization relates to the article', max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_relationships', to='content.article')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_relationships', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Article Organization Relationship',
                'verbose_name_plural': 'Article Organization Relationships',
                'db_table': 'content_article_organizations',
                'ordering': ['display_order', 'created_at'],
                'indexes': [models.Index(fields=['article', 'relationship_type'], name='content_art_article_28f0e9_idx'), models.Index(fields=['organization', 'relationship_type'], name='content_art_organiz_b8d60f_idx')],
                'unique_together': {('article', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True, max_length=500)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='content.article')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article View',
                'verbose_name_plural': 'Article Views',
                'db_table': 'content_article_views',
                'ordering': ['-viewed_at'],
                'indexes': [models.Index(fields=['article', '-viewed_at'], name='content_art_article_f71675_idx'), models.Index(fields=['user', '-viewed_at'], name='content_art_user_id_efea3d_idx'), models.Index(fields=['-viewed_at'], name='content_art_viewed__6c75e0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='content_cat_slug_5e7962_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent', 'order'], name='content_cat_parent__fd82de_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active'], name='content_cat_is_acti_8f8039_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['slug'], name='content_art_slug_b2c6b5_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', '-published_at'], name='content_art_status_250308_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['category', 'status'], name='content_art_categor_10e524_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['author', 'status'], name='content_art_author__2e7c9a_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['is_featured', 'status'], name='content_art_is_feat_0e38f8_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['article_type', 'status'], name='content_art_article_ca5a3d_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['-view_count'], name='content_art_view_co_9fee15_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='article',
            unique_together={('slug',)},
        ),
    ]
